server:
  port: 9001
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/quartz?serverTimezone=GMT&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      min-idle: 2
      max-wait: 30
      initial-size: 2
  #quartz任务调度的相关配置
  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: DefaultQuartzScheduler  #调度器实例名称
            instanceId: AUTO                      #调度器实例编号自动生成
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX   #持久化方式配置
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate     #持久化方式配置数据驱动，MySQL数据库
            tablePrefix: QRTZ_    #quartz相关数据表前缀名
            isClustered: false    #开启分布式（集群）部署这里不开启
            clusterCheckinInterval: 10000   #分布式节点有效性检查时间间隔，单位：毫秒
            useProperties: true  #配置是否使用
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool   #线程池实现类
            threadCount: 10    #执行最大并发线程数量
            threadPriority: 5    #线程优先级
            threadsInheritContextClassLoaderOfInitializingThread: true   #配置是否启动自动加载数据库内的定时任务，默认true
          dataSource:
            default:
              URL: jdbc:mysql://localhost:3306/quartz?characterEncoding=utf-8&useSSL=false
              user: root
              password: root
              driver: com.mysql.jdbc.Driver
    #数据库方式
    job-store-type: jdbc
    jdbc:
      initialize-schema: always #初始化表结构  #首次使用always 之后使用never  表结构初始化一次就可以，如果重复，则之前创建的任务的触发器会丢失，因为重置了表结构


mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:/mapper/*Mapper.xml



